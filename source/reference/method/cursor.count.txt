==============
cursor.count()
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. method:: cursor.count()

   Counts the number of documents referenced by a cursor. Append the
   :method:`~cursor.count()` method to a
   :method:`~db.collection.find()` query to return the number of
   matching documents. The operation does not perform the query but
   instead counts the results that would be returned by the query.

   The :method:`~cursor.count()` method has the following
   prototype form:

   .. code-block:: javascript

      db.collection.find().count()

   The :method:`~cursor.count()` method has the following
   parameter:


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Parameter
   
        - Type
   
        - Description
   
      * - ``applySkipLimit``
   
        - Boolean
   
        - Optional. Specifies whether to consider the effects of the
          :method:`cursor.skip()` and :method:`cursor.limit()` methods in the
          count. By default, the :method:`~cursor.count()` method
          ignores the effects of the :method:`cursor.skip()` and
          :method:`cursor.limit()`. Set ``applySkipLimit`` to ``true`` to
          consider the effect of these methods.
          
          
   


   .. seealso:: :method:`cursor.size()`

   MongoDB also provides the shell wrapper
   :method:`db.collection.count()` for the
   ``db.collection.find().count()`` construct.

   .. seealso:: :method:`cursor.size()`

Behavior
--------

.. |count-op| replace:: :method:`~cursor.count()` method

.. include:: /includes/fact-count-on-sharded-clusters.rst

Examples
--------

The following are examples of the :method:`~cursor.count()` method.

.. example:: Count the number of all documents in the ``orders`` collection:

   .. code-block:: javascript

      db.orders.find().count()

.. example:: Count the number of the documents in the ``orders``
   collection with the field ``ord_dt`` greater than ``new
   Date('01/01/2012')``:

   .. code-block:: javascript

      db.orders.find( { ord_dt: { $gt: new Date('01/01/2012') } } ).count()

.. example:: Count the number of the documents in the ``orders``
   collection with the field ``ord_dt`` greater than ``new
   Date('01/01/2012')`` *taking into account* the effect of the
   ``limit(5)``:

   .. code-block:: javascript

      db.orders.find( { ord_dt: { $gt: new Date('01/01/2012') } } ).limit(5).count(true)
