.. _mongorestore:

================
``mongorestore``
================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. |tool-binary| replace:: mongorestore

.. include:: /includes/admonition-mac-osx-sierra-restriction.rst

Synopsis
--------

The :binary:`~bin.mongorestore` program loads data from either a binary
database dump created by :binary:`~bin.mongodump` or the standard input
(starting in version 3.0.0) into a :binary:`~bin.mongod` or
:binary:`~bin.mongos` instance.

For an overview of :binary:`~bin.mongorestore` usage, see
:doc:`/tutorial/backup-and-restore-tools`.

Behavior
--------

Insert Only
~~~~~~~~~~~

:binary:`~bin.mongorestore` can create a new database or add data to an
existing database. However, :binary:`~bin.mongorestore` performs inserts
only and does not perform updates. That is, if restoring documents to
an existing database and collection and existing documents have the
same value ``_id`` field as the to-be-restored documents,
:binary:`~bin.mongorestore` will *not* overwrite those documents.

Rebuild Indexes
~~~~~~~~~~~~~~~

:binary:`~bin.mongorestore` recreates indexes recorded by
:binary:`~bin.mongodump`.

.. note::

   Starting in MongoDB 2.6, creating indexes will :ref:`error if an
   index key in an existing document exceeds the limit
   <2.6-index-key-length-incompatibility>`. See
   :ref:`2.6-index-key-length-incompatibility` for more information and
   solution.

   If you have an existing data set that violates this limit but want
   to resolve the index issue after restoring the data, you can disable
   the default index key length validation on the target database by
   setting the :program:`mongod` instance's
   :parameter:`failIndexKeyTooLong` parameter to false.

Version Compatibility
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/warning-mongodump-compatibility-2.2.rst

.. COMMENT upon completion of TOOLS-1035, either delete the whole section or delete everything after the semicolon.

Exclude ``system.profile`` Collection
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:binary:`~bin.mongorestore` does not restore the :data:`system.profile
<<database>.system.profile>` collection data; however, if the backup
data includes :data:`system.profile <<database>.system.profile>`
collection data and the collection does not exist in the target
database, :binary:`~bin.mongorestore` creates the collection but does not
insert any data into the collection.

.. _mongorestore-required-access:

Required Access
---------------

To restore data to a MongoDB deployment that has :doc:`access control
</core/authorization>` enabled, the :authrole:`restore` role provides
the necessary privileges to restore data from backups *if* the data does
not include :data:`system.profile <<database>.system.profile>`
collection data and you run :binary:`~bin.mongorestore` without the
:option:`--oplogReplay <mongorestore --oplogReplay>` option.

.. include:: /includes/access-mongorestore-collections.rst

Options
-------

.. versionchanged:: 3.0.0
   :binary:`~bin.mongorestore` removed the ``--filter``, ``--dbpath``, and the
   ``--noobjcheck`` options.

.. binary:: mongorestore

.. program:: mongorestore

.. include:: /includes/option/option-mongorestore-help.rst

.. include:: /includes/option/option-mongorestore-verbose.rst

.. include:: /includes/option/option-mongorestore-quiet.rst

.. include:: /includes/option/option-mongorestore-version.rst

.. include:: /includes/option/option-mongorestore-host.rst

.. include:: /includes/option/option-mongorestore-port.rst

.. include:: /includes/option/option-mongorestore-ssl.rst

.. include:: /includes/option/option-mongorestore-sslCAFile.rst

.. include:: /includes/option/option-mongorestore-sslPEMKeyFile.rst

.. include:: /includes/option/option-mongorestore-sslPEMKeyPassword.rst

.. include:: /includes/option/option-mongorestore-sslCRLFile.rst

.. include:: /includes/option/option-mongorestore-sslAllowInvalidCertificates.rst

.. include:: /includes/option/option-mongorestore-sslAllowInvalidHostnames.rst

.. include:: /includes/option/option-mongorestore-sslFIPSMode.rst

.. include:: /includes/option/option-mongorestore-username.rst

.. include:: /includes/option/option-mongorestore-password.rst

.. include:: /includes/option/option-mongorestore-authenticationDatabase.rst

.. include:: /includes/option/option-mongorestore-authenticationMechanism.rst

.. include:: /includes/option/option-mongorestore-gssapiServiceName.rst

.. include:: /includes/option/option-mongorestore-gssapiHostName.rst

.. include:: /includes/option/option-mongorestore-db.rst

.. include:: /includes/option/option-mongorestore-collection.rst

.. include:: /includes/option/option-mongorestore-objcheck.rst

.. include:: /includes/option/option-mongorestore-drop.rst

.. include:: /includes/option/option-mongorestore-oplogReplay.rst

.. include:: /includes/option/option-mongorestore-oplogLimit.rst

.. include:: /includes/option/option-mongorestore-keepIndexVersion.rst

.. include:: /includes/option/option-mongorestore-noIndexRestore.rst

.. include:: /includes/option/option-mongorestore-noOptionsRestore.rst

.. include:: /includes/option/option-mongorestore-restoreDbUsersAndRoles.rst

.. include:: /includes/option/option-mongorestore-writeConcern.rst

.. include:: /includes/option/option-mongorestore-maintainInsertionOrder.rst

.. include:: /includes/option/option-mongorestore-numParallelCollections.rst

.. include:: /includes/option/option-mongorestore-numInsertionWorkersPerCollection.rst

.. include:: /includes/option/option-mongorestore-stopOnError.rst

.. include:: /includes/option/option-mongorestore-bypassDocumentValidation.rst

.. _mongorestore-path-option:

.. include:: /includes/option/option-mongorestore-gzip.rst

.. include:: /includes/option/option-mongorestore-<path>.rst

.. include:: /includes/option/option-mongorestore-archive.rst

.. include:: /includes/option/option-mongorestore-dir.rst

Examples
--------

Restore a Collection
~~~~~~~~~~~~~~~~~~~~

Consider the following example:

.. code-block:: sh

   mongorestore --collection people --db accounts dump/accounts/people.bson

Here, :binary:`~bin.mongorestore` reads the database dump in the ``dump/``
sub-directory of the current directory, and restores *only* the
documents in the collection named ``people`` from the database named
``accounts``. :binary:`~bin.mongorestore` restores data to the instance
running on the localhost interface on port ``27017``.

Restore with Access Control
~~~~~~~~~~~~~~~~~~~~~~~~~~~

In the following example, :binary:`~bin.mongorestore` restores a database
dump located at ``/opt/backup/mongodump-2011-10-24``, to a database
running on port ``37017`` on the host
``mongodb1.example.net``. The :binary:`~bin.mongorestore` command authenticates to
the MongoDB instance using the username ``user`` and the
password ``pass``, as follows:

.. code-block:: sh

   mongorestore --host mongodb1.example.net --port 37017 --username user --password pass /opt/backup/mongodump-2011-10-24

Restore a Collection from Standard Input
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can also *pipe* data directly into to :binary:`~bin.mongorestore`
through standard input, as in the following example:

.. code-block:: sh

   zcat /opt/backup/mongodump-2014-12-03/accounts.people.bson.gz | mongorestore --collection people --db accounts -

.. _mongorestore-example-archive-file:

Restore a Database from an Archive File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. versionadded:: 3.2

To restore from an archive file, run :binary:`~bin.restore` with the new
``--archive`` option and the archive filename. For example, the
following operation restores the ``test`` database from the file
``test.20150715.archive``.

.. code-block:: sh

   mongorestore --archive=test.20150715.archive --db test

.. _mongorestore-example-archive-stdin:

Restore a Database from Standard Input
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. versionadded:: 3.2

To restore from the standard input, run :binary:`~bin.mongorestore` with the
``archive`` option but *omit* the filename. For example:

.. code-block:: sh

   mongodump --archive --db test --port 27017 | mongorestore --archive --port 27018

.. _mongorestore-example-gzip:

Restore from Compressed Data
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. versionadded:: 3.2
   With the ``--gzip`` option, :binary:`~bin.mongorestore` can restore from
   compressed files or data stream created by :binary:`~bin.mongodump`.

To restore from a dump directory that contains compressed files, run
:binary:`~bin.mongorestore` with the new ``--gzip`` option. For example, the
following operation restores the ``test`` database from the compressed
files located in the default ``dump`` directory:

.. code-block:: sh

   mongorestore --gzip --db test

To restore from a compressed archive file, run :binary:`~bin.mongorestore`
with the ``--gzip`` option in conjunction with the new ``--archive``
option. For example, the following operation restores the ``test``
database from the archive file ``test.20150715.gz``.

.. code-block:: sh

   mongorestore --gzip --archive=test.20150715.gz --db test
