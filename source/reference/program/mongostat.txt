.. _mongostat:

=============
``mongostat``
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol
.. |tool-binary| replace:: mongostat

.. include:: /includes/admonition-mac-osx-sierra-restriction.rst

Synopsis
--------

The :binary:`~bin.mongostat` utility provides a quick overview of the
status of a currently running :binary:`~bin.mongod`
or :binary:`~bin.mongos`
instance. :binary:`~bin.mongostat` is functionally similar to the
UNIX/Linux file system utility ``vmstat``, but provides data regarding
:binary:`~bin.mongod` and :binary:`~bin.mongos` instances.

.. seealso::

   For more information about monitoring MongoDB, see
   :doc:`/administration/monitoring`.

   For more background on various other MongoDB status outputs see:

   - :doc:`/reference/command/serverStatus`
   - :doc:`/reference/command/replSetGetStatus`
   - :doc:`/reference/command/dbStats`
   - :doc:`/reference/command/collStats`

   For an additional utility that provides MongoDB metrics see
   :doc:`mongotop </reference/program/mongotop>`.

Required Access
---------------

In order to connect to a :binary:`~bin.mongod` that enforces authorization
with the :option:`--auth <mongod --auth>` option, specify the
:option:`--username <mongostat --username>` and :option:`--password
<mongostat --password>` options, and the connecting user must have the
:authaction:`serverStatus` privilege action on the cluster resources.

The built-in role :authrole:`clusterMonitor` provides this privilege as
well as other privileges. To create a role with just the privilege to
run :binary:`~bin.mongostat`, see :ref:`create-role-for-mongostat`.

Options
-------

.. binary:: mongostat

.. program:: mongostat

.. option:: --help

   Returns information on the options and use of :program:`mongostat`.


.. option:: --verbose, -v

   Increases the amount of internal reporting returned on standard output
   or in log files. Increase the verbosity with the ``-v`` form by
   including the option multiple times, (e.g. ``-vvvvv``.)
   


.. option:: --version

   Returns the :program:`mongostat` release number.


.. option:: --host <hostname><:port>, -h <hostname><:port>

   *Default*: localhost:27017

   Specifies a resolvable hostname for the :binary:`~bin.mongod` to which to
   connect. By default, the :program:`mongostat` attempts to connect to a MongoDB
   instance running on the localhost on port number ``27017``.
   
   To connect to a replica set, you can specify the set member or
   members to report on, as in the following (see also the
   ``--discover`` flag):
   
   .. code-block:: none
   
      --host <hostname1><:port>,<hostname2><:port>,<...>
   
   .. versionchanged:: 3.0.0
      If you use IPv6 and use the ``<address>:<port>`` format, you must
      enclose the portion of an address and port combination in
      brackets (e.g. ``[<address>]``).


.. option:: --port <port>

   *Default*: 27017

   Specifies the TCP port on which the MongoDB instance listens for
   client connections.


.. option:: --ipv6

   Enables IPv6 support and allows the :program:`mongostat` to connect to the
   MongoDB instance using an IPv6 network. All MongoDB programs and
   processes disable IPv6 support by default.


.. option:: --ssl

   .. versionadded:: 2.6
   
   Enables connection to a :binary:`~bin.mongod` or :binary:`~bin.mongos` that has
   TLS/SSL support enabled.
   
   .. include:: /includes/fact-ssl-supported.rst
   


.. option:: --sslCAFile <filename>

   .. versionadded:: 2.6
   
   Specifies the :file:`.pem` file that contains the root certificate chain
   from the Certificate Authority. Specify the file name of the
   :file:`.pem` file using relative or absolute paths.
   
   .. include:: /includes/fact-ssl-supported.rst
   
   .. warning::
   
      For SSL connections (``--ssl``) to :binary:`~bin.mongod` and
      :binary:`~bin.mongos`, if the :program:`mongostat` runs without the
      :option:`--sslCAFile`, :program:`mongostat` will not attempt
      to validate the server certificates. This creates a vulnerability
      to expired :binary:`~bin.mongod` and :binary:`~bin.mongos` certificates as
      well as to foreign processes posing as valid :binary:`~bin.mongod` or
      :binary:`~bin.mongos` instances. Ensure that you *always* specify the
      CA file to validate the server certificates in cases where
      intrusion is a possibility.


.. option:: --sslPEMKeyFile <filename>

   .. versionadded:: 2.6
   
   Specifies the :file:`.pem` file that contains both the TLS/SSL certificate
   and key. Specify the file name of the :file:`.pem` file using relative
   or absolute paths.
   
   This option is required when using the :option:`--ssl` option to connect
   to a :binary:`~bin.mongod` or :binary:`~bin.mongos` that has
   :setting:`~net.ssl.CAFile` enabled *without*
   :setting:`~net.ssl.allowConnectionsWithoutCertificates`.
   
   .. include:: /includes/fact-ssl-supported.rst
   


.. option:: --sslPEMKeyPassword <value>

   .. versionadded:: 2.6
   
   Specifies the password to de-crypt the certificate-key file (i.e.
   :option:`--sslPEMKeyFile`). Use the :option:`--sslPEMKeyPassword` option only if the
   certificate-key file is encrypted. In all cases, the :program:`mongostat` will
   redact the password from all logging and reporting output.
   
   If the private key in the PEM file is encrypted and you do not specify
   the :option:`--sslPEMKeyPassword` option, the :program:`mongostat` will prompt for a passphrase. See
   :ref:`ssl-certificate-password`.
   
   .. include:: /includes/fact-ssl-supported.rst


.. option:: --sslCRLFile <filename>

   .. versionadded:: 2.6
   
   Specifies the :file:`.pem` file that contains the Certificate Revocation
   List. Specify the file name of the :file:`.pem` file using relative or
   absolute paths.
   
   .. include:: /includes/fact-ssl-supported.rst
   


.. option:: --sslAllowInvalidCertificates

   .. versionadded:: 2.6
   
   Bypasses the validation checks for server certificates and allows
   the use of invalid certificates. When using the
   :setting:`~net.ssl.allowInvalidCertificates` setting, MongoDB logs as a
   warning the use of the invalid certificate.
   
   .. include:: /includes/fact-ssl-supported.rst
   


.. option:: --sslAllowInvalidHostnames

   .. versionadded:: 3.0
   
   Disables the validation of the hostnames in TLS/SSL certificates. Allows
   :program:`mongostat` to connect to MongoDB instances even if the hostname in their
   certificates do not match the specified hostname.
   
   .. include:: /includes/fact-ssl-supported.rst


.. option:: --sslFIPSMode

   .. versionadded:: 2.6
   
   Directs the :program:`mongostat` to use the FIPS mode of the installed OpenSSL
   library. Your system must have a FIPS compliant OpenSSL library to use
   the :option:`--sslFIPSMode` option.
   
   .. include:: /includes/note-fips-is-enterprise-only.rst


.. option:: --username <username>, -u <username>

   Specifies a username with which to authenticate to a MongoDB database
   that uses authentication. Use in conjunction with the ``--password`` and
   ``--authenticationDatabase`` options.
   


.. option:: --password <password>, -p <password>

   Specifies a password with which to authenticate to a MongoDB database
   that uses authentication. Use in conjunction with the ``--username`` and
   ``--authenticationDatabase`` options.
   
   .. versionchanged:: 3.0.0
   
      If you do not specify an argument for :option:`--password`, :program:`mongostat` returns
      an error.
   
   .. versionchanged:: 3.0.2
   
      If you wish :program:`mongostat` to prompt the user
      for the password, pass the :option:`--username` option without
      :option:`--password` or specify an empty string as the :option:`--password` value,
      as in ``--password ""`` .
     


.. option:: --authenticationDatabase <dbname>

   .. versionadded:: 2.4
   
   Specifies the database in which the user is created.
   See :ref:`user-authentication-database`.
   

   :option:`--authenticationDatabase` is required for :binary:`~bin.mongod`
   and :binary:`~bin.mongos` instances that use :ref:`authentication`.


.. option:: --authenticationMechanism <name>

   *Default*: SCRAM-SHA-1

   .. versionadded:: 2.4
   
   .. versionchanged:: 2.6
      Added support for the ``PLAIN`` and ``MONGODB-X509`` authentication
      mechanisms.
   
   .. versionchanged:: 3.0
      Added support for the ``SCRAM-SHA-1`` authentication mechanism. Changed
      default mechanism to ``SCRAM-SHA-1``.
   
   Specifies the authentication mechanism the :program:`mongostat` instance uses to
   authenticate to the :binary:`~bin.mongod` or :binary:`~bin.mongos`.
   
   .. list-table::
      :header-rows: 1
      :widths: 20 40
   
      * - Value
   
        - Description
   
      * - :ref:`SCRAM-SHA-1 <authentication-scram-sha-1>`
   
        - `RFC 5802 <https://tools.ietf.org/html/rfc5802>`_ standard
          Salted Challenge Response Authentication Mechanism using the SHA1
          hash function.
   
      * - :ref:`MONGODB-CR <authentication-mongodb-cr>`
   
        - MongoDB challenge/response authentication.
   
      * - :ref:`MONGODB-X509 <security-auth-x509>`
   
        - MongoDB TLS/SSL certificate authentication.
   
      * - :ref:`GSSAPI <security-auth-kerberos>` (Kerberos)
   
        - External authentication using Kerberos. This mechanism is
          available only in `MongoDB Enterprise
          <http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`_.
   
      * - :ref:`PLAIN <security-auth-ldap>` (LDAP SASL)
   
        - External authentication using LDAP. You can also use ``PLAIN``
          for authenticating in-database users. ``PLAIN`` transmits
          passwords in plain text. This mechanism is available only in
          `MongoDB Enterprise
          <http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`_.


.. option:: --gssapiServiceName

   .. versionadded:: 2.6
   
   Specify the name of the service using :doc:`GSSAPI/Kerberos
   </core/kerberos>`. Only required if the service does not use the
   default name of ``mongodb``.
   
   This option is available only in MongoDB Enterprise.
   


.. option:: --gssapiHostName

   .. versionadded:: 2.6
   
   Specify the hostname of a service using :doc:`GSSAPI/Kerberos
   </core/kerberos>`. *Only* required if the hostname of a machine does
   not match the hostname resolved by DNS.
   
   This option is available only in MongoDB Enterprise.
   


.. option:: --noheaders

   Disables the output of column or field names.
   


.. option:: --rowcount <number>, -n <number>

   Controls the number of rows to output. Use in conjunction with
   the ``sleeptime`` argument to control the duration of a
   :binary:`~bin.mongostat` operation.
   
   Unless :option:`--rowcount` is specified, :binary:`~bin.mongostat`
   will return an infinite number of rows (e.g. value of ``0``.)


.. option:: --http

   Configures :binary:`~bin.mongostat` to collect data using the HTTP interface
   rather than a raw database connection.
   


.. option:: --discover

   Discovers and reports on statistics from all members of a :term:`replica
   set` or :term:`sharded cluster`. When connected to any member of a
   replica set, :option:`--discover` all non-:term:`hidden members <hidden
   member>` of the replica set. When connected to a :binary:`~bin.mongos`,
   :binary:`~bin.mongostat` will return data from all :term:`shards <shard>` in
   the cluster. If a replica set provides a shard in the sharded cluster,
   :binary:`~bin.mongostat` will report on non-hidden members of that replica
   set.
   
   The :option:`mongostat --host` option is not required but
   potentially useful in this case.
   
   .. versionchanged:: 2.6
      When running with :option:`--discover`, :binary:`~bin.mongostat` now
      respects :option:`--rowcount`.


.. option:: --all

   Configures :binary:`~bin.mongostat` to return all optional :ref:`fields
   <mongostat-fields>`.
   


.. option:: --json

   
   .. versionadded:: 3.0.0
   
   Returns output for :program:`mongostat` in :term:`JSON` format.


.. option:: <sleeptime>

   The final argument is the length of time, in seconds, that
   :binary:`~bin.mongostat` waits in between calls. By default :binary:`~bin.mongostat`
   returns one call every second.
   
   :binary:`~bin.mongostat` returns values that reflect the operations
   over a 1 second period. For values of ``<sleeptime>`` greater
   than 1, :binary:`~bin.mongostat` averages data to reflect average
   operations per second.
   


.. _mongostat-fields:

Fields
------

:binary:`~bin.mongostat` returns values that reflect the operations over a
1 second period. When :command:`mongostat <sleeptime>` has a value
greater than 1, :binary:`~bin.mongostat` averages the statistics to reflect
average operations per second.

:binary:`~bin.mongostat` outputs the following fields:

.. describe:: inserts

   The number of objects inserted into the database per second. If
   followed by an asterisk (e.g. ``*``), the datum refers to a
   replicated operation.

.. describe:: query

   The number of query operations per second.

.. describe:: update

   The number of update operations per second.

.. describe:: delete

   The number of delete operations per second.

.. describe:: getmore

   The number of get more (i.e. cursor batch) operations per second.

.. describe:: command

   The number of commands per second. On :term:`slave` and
   :term:`secondary` systems, :binary:`~bin.mongostat` presents two values
   separated by a pipe character (e.g. ``|``), in the form of
   ``local|replicated`` commands.

.. describe:: flushes

   .. versionchanged:: 3.0.0

   For the :ref:`storage-wiredtiger`, ``flushes`` refers to the number
   of WiredTiger checkpoints triggered between each polling interval.

   For the :ref:`storage-mmapv1`, ``flushes`` represents the number of
   :term:`fsync` operations per second.

.. describe:: dirty

   .. versionadded:: 3.0.0

   Only for :ref:`storage-wiredtiger`. The percentage of the WiredTiger
   cache with dirty bytes.

.. describe:: used

   .. versionadded:: 3.0.0

   Only for :ref:`storage-wiredtiger`. The percentage of the WiredTiger
   cache that is in use.

.. describe:: mapped

   .. versionchanged:: 3.0.0

   Only for :ref:`storage-mmapv1`. The total amount of data mapped in
   megabytes. This is the total data size at the time of the last
   :binary:`~bin.mongostat` call.

.. describe:: vsize

   The amount of virtual memory in megabytes used by the process at
   the time of the last :binary:`~bin.mongostat` call.

.. describe:: non-mapped

   .. versionchanged:: 3.0.0

   Only for :ref:`storage-mmapv1`.

   *Optional*. The total amount of virtual memory excluding all mapped memory at
   the time of the last :binary:`~bin.mongostat` call.

   :binary:`~bin.mongostat` only returns this value when started with the
   :option:`--all <mongostat --all>` option.

.. describe:: res

   The amount of resident memory in megabytes used by the process at
   the time of the last :binary:`~bin.mongostat` call.

.. describe:: faults

   .. versionchanged:: 3.0.0

   Only for :ref:`storage-mmapv1`. The number of page faults per second.

   .. versionchanged:: 2.1
      Before version 2.1, this value was only provided for MongoDB
      instances running on Linux hosts.

.. describe:: locked

   .. versionchanged:: 3.0.0
      Only appears when :binary:`~bin.mongostat` runs against pre-3.0
      versions of MongoDB instances.

   The percent of time in a global write lock.

.. describe:: idx miss

   .. versionchanged:: 3.0.0

   Only for :ref:`storage-mmapv1`. The percent of index access attempts
   that required a page fault to load a btree node. This is a sampled
   value.

.. describe:: qr

   The length of the queue of clients waiting to read data from the
   MongoDB instance.

.. describe:: qw

   The length of the queue of clients waiting to write data from the
   MongoDB instance.

.. describe:: ar

   The number of active clients performing read operations.

.. describe:: aw

   The number of active clients performing write operations.

.. describe:: netIn

   The amount of network traffic, in *bytes*, received by the MongoDB instance.

   This includes traffic from :binary:`~bin.mongostat` itself.

.. describe:: netOut

   The amount of network traffic, in *bytes*, sent by the MongoDB instance.

   This includes traffic from :binary:`~bin.mongostat` itself.

.. describe:: conn

   The total number of open connections.

.. describe:: set

   The name, if applicable, of the replica set.

.. describe:: repl

   The replication status of the member.

   =========  =========================
   **Value**  **Replication Type**
   ---------  -------------------------
   M          :term:`master`
   SEC        :term:`secondary`
   REC        recovering
   UNK        unknown
   SLV        :term:`slave`
   RTR        mongos process ("router")
   ARB        :term:`arbiter`
   =========  =========================

Usage
-----

In the first example, :binary:`~bin.mongostat` will return data every
second for 20 seconds. :binary:`~bin.mongostat` collects data from the
:binary:`~bin.mongod` instance running on the localhost interface on
port 27017. All of the following invocations produce identical
behavior:

.. code-block:: sh

   mongostat --rowcount 20 1
   mongostat --rowcount 20
   mongostat -n 20 1
   mongostat -n 20

In the next example, :binary:`~bin.mongostat` returns data every 5 minutes
(or 300 seconds) for as long as the program runs. :binary:`~bin.mongostat`
collects data from the :binary:`~bin.mongod` instance running on the
localhost interface on port ``27017``. Both of the following
invocations produce identical behavior.

.. code-block:: sh

   mongostat --rowcount 0 300
   mongostat -n 0 300
   mongostat 300

In the following example, :binary:`~bin.mongostat` returns data every 5
minutes for an hour (12 times.) :binary:`~bin.mongostat` collects data
from the :binary:`~bin.mongod` instance running on the localhost interface
on port 27017. Both of the following invocations produce identical
behavior.

.. code-block:: sh

   mongostat --rowcount 12 300
   mongostat -n 12 300

In many cases, using the :option:`--discover <mongostat --discover>`
will help provide a more complete snapshot of the state of an entire
group of machines. If a :binary:`~bin.mongos` process connected to a
:term:`sharded cluster` is running on port ``27017`` of the local
machine, you can use the following form to return statistics from all
members of the cluster:

.. code-block:: sh

   mongostat --discover
