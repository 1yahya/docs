=======
geoNear
=======

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: geoNear

   Specifies a point for which a :term:`geospatial` query returns the
   closest documents first. The query returns the documents from nearest
   to farthest. The :dbcommand:`geoNear` command provides an alternative
   to the :query:`$near` operator. In addition to the functionality
   of :query:`$near`, :dbcommand:`geoNear` returns additional
   diagnostic information.

   The :dbcommand:`geoNear` command can use either a :term:`GeoJSON`
   point or :term:`legacy coordinate pairs`. Queries that use a ``2d``
   index return a limit of 100 documents.

   The :dbcommand:`geoNear` command requires that a collection have *at
   most* only one :doc:`2d index </core/2d>` and/or only one
   :doc:`2dsphere </core/2dsphere>`.

   The :dbcommand:`geoNear` command accepts a :term:`document` that
   contains the following fields. Specify all distances in the same
   units as the document coordinate system:


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Field
   
        - Type
   
        - Description
   
      * - ``geoNear``
   
        - string
   
        - The collection to query.
          
          
   
      * - ``near``
   
        - GeoJSON point or :term:`legacy coordinate pairs <legacy coordinate pairs>`
   
        - The point for which to find the closest documents.
          
          
   
      * - ``limit``
   
        - number
   
        - Optional. The maximum number of documents to return. The default value is ``100``.
          See also the ``num`` option.
          
          
   
      * - ``num``
   
        - number
   
        - Optional. The ``num`` option provides the same function as the ``limit`` option.
          Both define the maximum number of documents to return. If both options
          are included, the ``num`` value overrides the ``limit`` value.
          
          
   
      * - ``maxDistance``
   
        - number
   
        - Optional. A distance from the center point. Specify the distance in meters for
          :term:`GeoJSON` data and
          in radians for :term:`legacy coordinate pairs <legacy coordinate
          pairs>`. MongoDB limits the results to those documents that fall
          within the specified distance from the center point.
          
          
   
      * - ``query``
   
        - document
   
        - Optional. Limits the results to the documents that match the query. The query
          syntax is the usual MongoDB :ref:`read operation query
          <read-operations-query-argument>` syntax.
          
          
   
      * - ``spherical``
   
        - Boolean
   
        - Required *if* using a :doc:`2dsphere </core/2dsphere>` index. For use
          with ``2dsphere`` indexes, ``spherical`` must be ``true``.
          
          The default value is ``false``.
          
          
   
      * - ``distanceMultiplier``
   
        - number
   
        - Optional. The factor to multiply all distances returned by the query. For
          example, use the ``distanceMultiplier`` to convert radians, as
          returned by a spherical query, to kilometers by multiplying by the
          radius of the Earth.
          
          
   
      * - ``includeLocs``
   
        - Boolean
   
        - Optional. If this is ``true``, the query
          returns the location of the matching documents in the results. The
          default is ``false``. This option is useful when a location field
          contains multiple locations. To specify a field within a
          subdocument, use :term:`dot notation`.
          
          
   
      * - ``uniqueDocs``
   
        - Boolean
   
        - Optional. If this value is ``true``, the query returns a matching document once,
          even if more than one of the document's location fields match the
          query. If this value is ``false``, the query returns a document
          multiple times if the document has multiple matching location fields.
          See :query:`$uniqueDocs` for more information.
          
          
   


Command Format
--------------

``2dsphere`` Index
~~~~~~~~~~~~~~~~~~

To query a :doc:`2dsphere </core/2dsphere>` index, use the
following syntax:

.. code-block:: javascript

   db.runCommand( { geoNear : <collection> ,
                    near : { type : "Point" ,
                             coordinates: [ <coordinates> ] },
                    spherical : true } )

You must include ``spherical: true`` option.

``2d`` Index
~~~~~~~~~~~~

To query a :doc:`2d </core/2d>` index, use:

.. code-block:: javascript

   { geoNear : <collection> , near : [ <coordinates> ] }

.. read-lock, slave-ok
