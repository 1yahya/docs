=========
moveChunk
=========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: moveChunk

   Internal administrative command. Moves :term:`chunks <chunk>` between
   :term:`shards <shard>`. Issue the :dbcommand:`moveChunk` command via
   a :binary:`~bin.mongos` instance while using the :term:`admin database`.
   Use the following forms:

   .. code-block:: javascript

      db.runCommand( { moveChunk : <namespace> ,
                       find : <query> ,
                       to : <string>,
                       _secondaryThrottle : <Boolean>,
                       _waitForDelete : <Boolean> } )

   Alternately:

   .. code-block:: javascript

      db.runCommand( { moveChunk : <namespace> ,
                       bounds : <array> ,
                       to : <string>,
                       _secondaryThrottle : <Boolean>,
                       _waitForDelete : <Boolean> } )

   The :dbcommand:`moveChunk` command has the following fields:


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Field
   
        - Type
   
        - Description
   
      * - ``moveChunk``
   
        - string
   
        - The :term:`namespace` of the :term:`collection` where the
          :term:`chunk` exists. Specify the collection's full namespace,
          including the database name.
          
          
   
      * - ``find``
   
        - document
   
        - An equality match on the shard key that specifies the shard-key value
          of the chunk to move. Specify either the ``bounds`` field or the
          ``find`` field but not both.
          
          
   
      * - ``bounds``
   
        - array
   
        - The bounds of a specific chunk to move. The array must consist of two
          documents that specify the lower and upper shard key values of a chunk
          to move. Specify either the ``bounds`` field or the ``find`` field but
          not both. Use ``bounds`` to move chunks in collections partitioned
          using a :term:`hashed shard key`.
          
          
   
      * - ``to``
   
        - string
   
        - The name of the destination shard for the chunk.
          
          
   
      * - ``_secondaryThrottle``
   
        - Boolean
   
        - Optional. Defaults to ``true``. When ``true``, the balancer waits
          for replication to :term:`secondaries <secondary>` when it copies
          and deletes data during chunk migrations. For details, see
          :ref:`sharded-cluster-config-secondary-throttle`.
          
          
   
      * - ``_waitForDelete``
   
        - Boolean
   
        - Optional. Internal option for testing purposes. The default is ``false``. If set
          to ``true``, the delete phase of a :dbcommand:`moveChunk` operation
          blocks.
          
          
   


   The value of ``bounds`` takes the form:

   .. code-block:: javascript

      [ { hashedField : <minValue> } ,
        { hashedField : <maxValue> } ]

   The :ref:`chunk migration <sharding-chunk-migration>` section
   describes how chunks move between shards on MongoDB.

.. seealso:: :dbcommand:`split`, :method:`sh.moveChunk()`,
   :method:`sh.splitAt()`, and :method:`sh.splitFind()`.

Return Messages
---------------

:dbcommand:`moveChunk` returns the following error message if another
metadata operation is in progress on the :data:`~config.chunks` collection:

.. code-block:: none

   errmsg: "The collection's metadata lock is already taken."

If another process, such as a balancer process, changes meta data
while :dbcommand:`moveChunk` is running, you may see this
error. You may retry the :dbcommand:`moveChunk` operation without
side effects.

.. note::

   Only use the :dbcommand:`moveChunk` in special circumstances
   such as preparing your :term:`sharded cluster` for an initial
   ingestion of data, or a large bulk import operation.
   In most cases allow the balancer to create and balance chunks
   in sharded clusters.
   See
   :doc:`/tutorial/create-chunks-in-sharded-cluster` for more information.

.. admin-only
