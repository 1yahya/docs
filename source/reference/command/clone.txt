=====
clone
=====

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. dbcommand:: clone

   The :dbcommand:`clone` command clones a database from a
   remote MongoDB instance to the current host. :dbcommand:`clone` copies the
   database on the remote instance with the same name as the current
   database. The command takes the following form:

   .. code-block:: javascript

      { clone: <hostname:port>, bypassDocumentValidation: <boolean> }

   :dbcommand:`clone` has the following fields:

   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Field
   
        - Type
   
        - Description
   
      * - ``hostname:port``
   
        - string

        - The hostname and port of the remote MongoDB instance.

      * - ``bypassDocumentValidation``
   
        - boolean
   
        - Optional. Enables :dbcommand:`clone` to bypass document validation
          during the operation. This lets you insert documents that do not
          meet the validation requirements.
          
          .. versionadded:: 3.2

Behavior
--------

- :dbcommand:`clone` can copy from a non-:term:`primary` member of a :term:`replica set`.

- :dbcommand:`clone` does not snapshot the database. If any clients
  update the database you're copying at any point during the clone
  operation, the resulting database may be inconsistent.

- You must run :dbcommand:`clone` on the **destination server**.

- The destination database will be locked periodically during the
  :dbcommand:`clone` operation. In other words, :dbcommand:`clone` will occasionally yield to
  allow other operations on the database to complete.

See :dbcommand:`copydb` for similar functionality with greater flexibility.
