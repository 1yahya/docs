====
find
====

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: find

   .. versionadded:: 3.2

   Executes a query and returns the first batch of results and the
   cursor id, from which the client can construct a cursor.

   The :dbcommand:`find` command has the following form:

   .. code-block:: javascript

      {
         "find": <string>,
         "filter": <document>,
         "sort": <document>,
         "projection": <document>,
         "hint": <document or string>,
         "skip": <int>,
         "limit": <int>,
         "batchSize": <int>,
         "singleBatch": <bool>,
         "comment": <string>,
         "maxScan": <int>,
         "maxTimeMS": <int>,
         "readConcern": <document>,
         "max": <document>,
         "min": <document>,
         "returnKey": <bool>,
         "showRecordId": <bool>,
         "snapshot": <bool>,
         "tailable": <bool>,
         "oplogReplay": <bool>,
         "noCursorTimeout": <bool>,
         "awaitData": <bool>,
         "allowPartialResults": <bool>
      }

   The command accepts the following fields:


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Field
   
        - Type
   
        - Description
   
      * - ``find``
   
        - string
   
        - The name of the collection to query.
          
          
   
      * - ``filter``
   
        - document
   
        - Optional. The query predicate. If unspecified, then all documents in
          the collection will match the predicate.
          
          
   
      * - ``sort``
   
        - document
   
        - Optional. The sort specification for the ordering of the results.
          
          
   
      * - ``projection``
   
        - document
   
        - Optional. The :ref:`projection specification <projections>` to
          determine which fields to include in the returned documents. See
          :ref:`projections` and :doc:`/reference/operator/projection`.
          
          
   
      * - ``hint``
   
        - string or document
   
        - Optional. Index specification. Specify either the index name as a
          string or the index key pattern. If specified, then the query system
          will only consider plans using the hinted index.
          
          
   
      * - ``skip``
   
        - Positive integer
   
        - Optional. Number of documents to skip. Defaults to 0.
          
          
   
      * - ``limit``
   
        - Non-negative integer
   
        - Optional. The maximum number of documents to return. If unspecified,
          then defaults to no limit. A limit of 0 is equivalent to setting no
          limit.
          
          
   
      * - ``batchSize``
   
        - non-negative integer
   
        - Optional. The number of documents to return in the first batch.
          Defaults to 101. A batchSize of 0 means that the cursor will be
          established, but no documents will be returned in the first batch.
          
          Unlike the previous wire protocol version, a batchSize of 1 for
          the :dbcommand:`find` command does not close the cursor.
          
          
   
      * - ``singleBatch``
   
        - boolean
   
        - Optional. Determines whether to close the cursor after the first
          batch. Defaults to false.
          
          
   
      * - ``comment``
   
        - string
   
        - Optional. A comment to attach to the query to help interpret and trace query
          :dbcommand:`profile` data.
          
          
   
      * - ``maxScan``
   
        - positive integer
   
        - Optional. Maximum number of documents or index keys to scan when executing the
          query.
          
          
   
      * - ``maxTimeMS``
   
        - positive integer
   
        - Optional. The cumulative time limit in milliseconds for processing operations on
          the cursor. MongoDB aborts the operation at the earliest following
          :term:`interrupt point`.
          
          
   
      * - ``readConcern``
   
        - document
   
        - Optional. Specifies the :term:`read concern`. The default level is
          :readconcern:`"local"`.
          
          .. include:: /includes/fact-enable-majority-readConcern.rst
          
          .. include:: /includes/usage-read-concern-majority.rst
          
          .. note:: 
          
             The :dbcommand:`getMore` command uses the ``readConcern`` level
             specified in the originating ``find`` command.
          
          
   
      * - ``max``
   
        - document
   
        - Optional. The *exclusive* upper bound for a specific index. See
          :method:`cursor.max()` for details.
          
          
   
      * - ``min``
   
        - document
   
        - Optional. The *inclusive* lower bound for a specific index. See
          :method:`cursor.min()` for details.
          
          
   
      * - ``returnKey``
   
        - boolean
   
        - Optional. If true, returns only the index keys in the resulting documents.
          Default value is false. If returnKey is true and the :dbcommand:`find`
          command does not use an index, the returned documents will be empty.
          
          
   
      * - ``showRecordId``
   
        - boolean
   
        - Optional. Determines whether to return the record identifier for each document.
          If true, adds a field $recordId to the returned documents.
          
          
   
      * - ``snapshot``
   
        - boolean
   
        - Optional. Prevents the cursor from returning a document more than once because
          of an intervening write operation.
          
          
   
      * - ``tailable``
   
        - boolean
   
        - Optional. Returns a :term:`tailable cursor` for a capped collections.
          
          
   
      * - ``awaitData``
   
        - boolean
   
        - Optional. Use in conjunction with the tailable option to block a
          :dbcommand:`getMore` command on the cursor temporarily if at the end
          of data rather than returning no data. After a timeout period,
          :dbcommand:`find` returns as normal.
          
          
   
      * - ``oplogReplay``
   
        - boolean
   
        - Optional. Internal use for replica sets. To use oplogReplay, you must include
          the following condition in the filter:
          
          .. code-block:: javascript
          
             { ts: { $gte: <timestamp> } }
          
          
   
      * - ``noCursorTimeout``
   
        - boolean
   
        - Optional. Prevents the server from timing out idle cursors after an inactivity
          period (10 minutes).
          
          
   
      * - ``allowPartialResults``
   
        - boolean
   
        - Optional. For queries against a sharded collection, returns partial results from
          the :binary:`~bin.mongos` if some shards are unavailable instead of
          throwing an error.
          
          
   


Examples
--------

Specify a Sort and Limit
~~~~~~~~~~~~~~~~~~~~~~~~

The following command runs the :dbcommand:`find`
command filtering on the ``rating`` field and the ``cuisine`` field.
The command includes a ``projection`` to only return the
following fields in the matching documents: ``_id``, ``name``,
``rating``, and ``address`` fields.

The command sorts the documents in the result set by the ``name``
field and limits the result set to 5 documents.

.. code-block:: javascript

   db.runCommand(
      {
        find: "restaurants",
        filter: { rating: { $gte: 9 }, cuisine: "italian" },
        projection: { name: 1, rating: 1, address: 1 },
        sort: { name: 1 },
        limit: 5
      }
   )

Override Default Read Concern
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To override the default read concern level of :readconcern:`"local"`,
use the ``readConcern`` option.

The following operation on a replica set specifies a :term:`read
concern` of :readconcern:`"majority"` to read the most recent copy of
the data confirmed as having been written to a majority of the nodes.

.. note::

   - .. include:: /includes/fact-enable-majority-readConcern.rst

   - .. include:: /includes/fact-readConcern-most-recent-data-in-node.rst

.. code-block:: javascript

   db.runCommand(
      {
        find: "restaurants",
        filter: { rating: { $lt: 5 } },
        readConcern: { level: "majority" }
      }
   )

.. include:: /includes/usage-read-concern-majority.rst

The :dbcommand:`getMore` command uses the ``readConcern`` level
specified in the originating :dbcommand:`find` command.

A ``readConcern`` can be specified for the :binary:`~bin.mongo` shell method
:method:`db.collection.find()` using the :method:`cursor.readConcern`
method:

.. code-block:: javascript

   db.restaurants.find( { rating: { $lt: 5 } } ).readConcern("majority")

.. seealso:: :ref:`3.2-driver-compatibility`
