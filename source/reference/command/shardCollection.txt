===============
shardCollection
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: shardCollection

   Enables a collection for sharding and allows MongoDB to begin
   distributing data among shards. You must run
   :dbcommand:`enableSharding` on a database before running the
   :dbcommand:`shardCollection` command. :dbcommand:`shardCollection`
   has the following form:

   .. code-block:: javascript

      { shardCollection: "<database>.<collection>", key: <shardkey> }

   :dbcommand:`shardCollection` has the following fields:


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Field
   
        - Type
   
        - Description
   
      * - ``shardCollection``
   
        - string
   
        - The :term:`namespace` of the collection to shard in the form
          ``<database>.<collection>``.
          
          
   
      * - ``key``
   
        - document
   
        - The index specification document
          to use as the shard key. The index must exist prior to the
          :dbcommand:`shardCollection` command, unless the collection is empty.
          If the collection is empty, in which case MongoDB creates the index
          prior to sharding the collection. New in version 2.4: The key may be
          in the form ``{ field : "hashed" }``, which will use the specified
          field as a hashed shard key.
          
          
   
      * - ``unique``
   
        - boolean
   
        - When ``true``, the ``unique`` option ensures that the underlying index
          enforces a unique constraint. Hashed shard keys do not support unique
          constraints.
          
          
   
      * - ``numInitialChunks``
   
        - integer
   
        - Specifies the number of chunks to create
          initially when sharding an *empty* collection with a :ref:`hashed
          shard key <sharding-hashed-sharding>`. MongoDB will then create and
          balance chunks across the cluster. The ``numInitialChunks`` must be
          less than ``8192`` per shard. If the collection is not empty,
          ``numInitialChunks`` has no effect.
          
          
   


Considerations
--------------

Use
~~~

Do **not** run more than one :dbcommand:`shardCollection` command on
the same collection at the same time.

.. include:: /includes/fact-cannot-unshard-collection.rst

Shard Keys
~~~~~~~~~~

Choosing the best shard key to effectively distribute load among your
shards requires some planning. Review :ref:`sharding-shard-key`
regarding choosing a shard key.

Hashed Shard Keys
~~~~~~~~~~~~~~~~~

.. versionadded:: 2.4

:ref:`Hashed shard keys <sharding-hashed-sharding>` use a
hashed index of a single field as the shard key.

.. include:: /includes/note-hashed-shard-key-during-chunk-migration.rst

Example
-------

The following operation enables sharding for the ``people`` collection
in the ``records`` database and uses the ``zipcode`` field as the
:ref:`shard key <shard-key>`:

.. code-block:: javascript

   db.runCommand( { shardCollection: "records.people", key: { zipcode: 1 } } )

Additional Information
----------------------

:doc:`/sharding`, :doc:`/core/sharding`, and
:doc:`/tutorial/deploy-shard-cluster`.
