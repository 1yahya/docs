===============
cloneCollection
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: cloneCollection

   Copies a collection from a remote :binary:`~bin.mongod` instance to the
   current :binary:`~bin.mongod` instance. :dbcommand:`cloneCollection`
   creates a collection in a database with the same name as the remote
   collection's database.  :dbcommand:`cloneCollection` takes the
   following form:

   .. code-block:: javascript

      { cloneCollection: "<namespace>", from: "<hostname>", query: { <query> } }

   .. important:: You cannot clone a collection through a
      :binary:`~bin.mongos` but must connect directly to the
      :binary:`~bin.mongod` instance.

   :dbcommand:`cloneCollection` has the following fields:


   .. list-table::
      :header-rows: 1
      :widths: 20 20 80
   
      * - Field
   
        - Type
   
        - Description
   
      * - ``cloneCollection``
   
        - string
   
        - The :term:`namespace` of the collection to rename. The namespace is a
          combination of the database name and the name of the collection.
          
          
   
      * - ``from``
   
        - string
   
        - Specify a resolvable hostname and optional port number of the remote
          server where the specified collection resides.
          
          
   
      * - ``query``
   
        - document
   
        - Optional. A query that filters the documents in the remote collection that
          :dbcommand:`cloneCollection` will copy to the current database.
          
          
   


Example
-------

.. code-block:: javascript

   { cloneCollection: "users.profiles", from: "mongodb.example.net:27017", query: { active: true } }

This operation copies the ``profiles`` collection from the ``users``
database on the server at ``mongodb.example.net``. The operation only
copies documents that satisfy the query ``{ active: true }``.
:dbcommand:`cloneCollection` always copies indexes. The ``query``
arguments is optional.

If, in the above example, the ``profiles`` collection exists in the
``users`` database, then MongoDB appends documents from the remote
collection to the destination collection.
